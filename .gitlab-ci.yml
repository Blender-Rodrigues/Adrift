stages:
  - test
  - build_test
  - deploy_test
  - build_master
  - deploy_master
  - deploy_web

test:
  tags:
    - iti0200
  stage: test
  image: openjdk:8-jdk-alpine
  script:
    - chmod 700 gradlew
    - export NO_GUI=true
    - ./gradlew clean test
    - ./gradlew build -x test -PlwjglNatives=natives-windows -PjarVersion=windows
    - ./gradlew build -x test -PlwjglNatives=natives-macos -PjarVersion=mac
    - ./gradlew build -x test -PlwjglNatives=natives-linux -PjarVersion=linux
  artifacts:
    paths:
      - build/reports/
      - build/test-results/
      - build/libs/
      - static/

build_test:
  tags:
    - iti0200
  image: docker:19.03.8
  stage: build_test
  only:
    refs:
      - development
  variables:
    DOCKER_TLS_CERTDIR: ""
  services:
    - docker:19.03.8-dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - docker build -t jaakkytt/escape-from-eros:test -f ci/Dockerfile .
    - docker push jaakkytt/escape-from-eros:test
    - docker logout

deploy_test:
  tags:
    - iti0200
  image: ubuntu
  stage: deploy_test
  only:
    refs:
      - development
  script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - echo "$GAMESERVER_KEY" > ~/.ssh/id_rsa
    - chmod 700 ~/.ssh/id_rsa
    - eval "$(ssh-agent -s)"
    - ssh-add ~/.ssh/id_rsa
    - ssh-keyscan -H $SERVER_IP >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - ssh game@$SERVER_IP "docker pull jaakkytt/escape-from-eros:test"
    - ssh game@$SERVER_IP "docker stop escape-from-eros-test || true && docker rm -f escape-from-eros-test || true"
    - ssh game@$SERVER_IP "docker run -d --network host --env GAME_OPS=8888 --restart=always --name escape-from-eros-test jaakkytt/escape-from-eros:test"

build_master:
  tags:
    - iti0200
  image: docker:19.03.8
  stage: build_master
  only:
    refs:
      - feature/separate-master
  variables:
    DOCKER_TLS_CERTDIR: ""
  services:
    - docker:19.03.8-dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - docker build -t jaakkytt/escape-from-eros:latest -f ci/Dockerfile .
    - docker push jaakkytt/escape-from-eros:latest
    - docker logout

deploy_master:
  tags:
    - iti0200
  image: ubuntu
  stage: deploy_master
  only:
    refs:
      - feature/separate-master
  script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - echo "$GAMESERVER_KEY" > ~/.ssh/id_rsa
    - chmod 700 ~/.ssh/id_rsa
    - eval "$(ssh-agent -s)"
    - ssh-add ~/.ssh/id_rsa
    - ssh-keyscan -H $SERVER_IP >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - ssh game@$SERVER_IP "docker pull jaakkytt/escape-from-eros:latest"
    - ssh game@$SERVER_IP "docker stop escape-from-eros || true && docker rm -f escape-from-eros || true"
    - ssh game@$SERVER_IP "docker run -d --network host --restart=always --name escape-from-eros jaakkytt/escape-from-eros:latest"

deploy_web:
  tags:
    - iti0200
  image: ubuntu
  stage: deploy_web
  only:
    refs:
      - master
  script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - echo "$GAMESERVER_KEY" > ~/.ssh/id_rsa
    - chmod 700 ~/.ssh/id_rsa
    - eval "$(ssh-agent -s)"
    - ssh-add ~/.ssh/id_rsa
    - ssh-keyscan -H $SERVER_IP >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - cp build/libs/*jar static
    - scp static/* game@$SERVER_IP:/home/game/static
    - ssh game@$SERVER_IP "docker stop web || true && docker rm -f web || true"
    - ssh game@$SERVER_IP "docker run -d -p 80:8080 --restart=always -v /home/game/static:/web --name web halverneus/static-file-server:latest"
